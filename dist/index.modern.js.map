{"version":3,"file":"index.modern.js","sources":["../src/Components/Divider/index.js","../src/Components/Button/index.js","../src/Components/Avatar/Avatar/index.js","../src/Components/Avatar/AvatarGroup/index.js","../src/Components/Affix/index.js","../src/Components/Anchor/index.js","../src/Components/Alert/Alert/index.js","../src/Components/Alert/AlertErrorBoundary/index.js","../src/Components/Badge/Badge/index.js","../src/Components/Typography/Link/index.js"],"sourcesContent":["import React from \"react\";\nimport { Divider as AntdDivider } from 'antd';\n\n/**\n * @typedef Props\n * @prop {string} className\n * @prop {boolean} dashed\n * @prop {\"left\"| \"right\" | \"center\"} orientation\n * @prop {boolean} plain\n * @prop {React.CSSProperties} style\n * @prop {\"horizontal\" | \"vertical\"} type\n * @prop {JSX.Element} children\n * @returns {JSX.Element}\n */\n\n/**\n * @param {Props} props\n */\n\nconst Divider = ({\n  className,\n  dashed,\n  orientation,\n  plain,\n  style,\n  type,\n  children,\n}) => {\n\n  const props = {\n    className,\n    dashed,\n    orientation,\n    plain,\n    style,\n    type,\n    children,\n  };\n  \n  return <AntdDivider {...props}>{children}</AntdDivider>;\n};\nexport default Divider;\n","import React from \"react\";\nimport { Button as AntdButton } from \"antd\";\n/**\n *\n * @typedef Props\n * @prop {boolean} block\n * @prop {boolean} danger\n * @prop {boolean} disabled\n * @prop {boolean} ghost\n * @prop {string} href\n * @prop {\"button\" | \"submit\" | \"reset\" | undefined} htmlType\n * @prop {React.ReactNode} icon\n * @prop {boolean | { delay: number}}loading\n * @prop {\"circle\" | \"round\"} shape\n * @prop {\"large\" | \"middle\" | \"small\"} size\n * @prop {string} target\n * @prop {\"ghost\" | \"dashed\" | \"link\" | \"text\" | \"default\" | \"primary\" | undefined} type\n * @prop {()=> void} onClick\n * @prop {string} className\n * @prop {React.CSSProperties} style\n * @prop {JSX.Element} children\n * @return {JSX.Element}\n * @constructor\n */\n\n/**\n * @param {Props} props\n */\nconst Button = ({\n  block,\n  danger,\n  disabled,\n  ghost,\n  href,\n  htmlType,\n  icon,\n  loading,\n  shape,\n  size,\n  target,\n  type,\n  onClick,\n  className,\n  children,\n  style,\n}) => {\n  const props = {\n    block,\n    danger,\n    disabled,\n    ghost,\n    href,\n    htmlType,\n    icon,\n    loading,\n    shape,\n    size,\n    target,\n    type,\n    onClick,\n    className,\n    children,\n    style,\n  };\n\n  return <AntdButton {...props}>{children}</AntdButton>;\n};\nexport default Button;\n","import React from \"react\";\nimport { Avatar as AntdAvatar } from \"antd\";\n/**\n * @typedef Props\n * @prop {React.CSSProperties} style\n * @prop {string} alt\n * @prop {number} gap\n * @prop {React.ReactNode} icon\n * @prop {\"circle\" | \"square\"\t} shape\n * @prop {number | \"large\" | \"small\" | \"default\" | { xs: number, sm: number, }\t} size\n * @prop {string | React.ReactNode\t} src\n * @prop {string} srcSet\n//  * @prop {boolean | \"true\" | \"false\" } draggable\n * @prop {() => boolean} onError\n * @prop {string} className\n * @prop {JSX.Element} children\n * @returns {JSX.Element}\n * @constructor\n */\n\n/**\n * @param {Props} props\n */\n\nconst Avatar = ({\n  alt,\n  gap,\n  icon,\n  shape,\n  size,\n  src,\n  srcSet,\n  // draggable,\n  onError,\n  children,\n  style,\n  className,\n}) => {\n  const props = {\n    alt,\n    style,\n    gap,\n    icon,\n    shape,\n    size,\n    src,\n    srcSet,\n    // draggable,\n    onError,\n    children,\n    className,\n  };\n\n  return <AntdAvatar {...props}>{children}</AntdAvatar>;\n};\nexport default Avatar;\n","import React from \"react\";\nimport { Avatar as AntdAvatar } from \"antd\";\n/**\n * @typedef Props\n * @prop {number} maxCount\n * @prop {\"top\" | \"bottom\"\t} maxPopoverPlacement\n * @prop {React.CSSProperties} maxStyle\n * @prop {number | \"large\" | \"small\" | \"default\" | { xs: number, sm: number,}\t} size\n * @prop {JSX.Element} children\n * @returns {JSX.Element}\n * @constructor\n */\n\n/**\n * @param {Props} props\n */\n\nconst AvatarGroup = ({\n  maxCount,\n  maxPopoverPlacement,\n  maxStyle,\n  size,\n  children,\n}) => {\n  const props = { maxCount, maxPopoverPlacement, maxStyle, size, children };\n\n  return <AntdAvatar.Group {...props}>{children}</AntdAvatar.Group>;\n};\nexport default AvatarGroup;\n","import React from \"react\";\nimport { Affix as AntdAffix } from \"antd\";\n/**\n * @typedef Props\n * @prop {number} offsetBottom\n * @prop {number} offsetTop\n * @prop {() => HTMLElement} target\n * @prop {(affixed:any)=>void} onChange\n * @prop {JSX.Element} children\n * @return {JSX.Element}\n * @constructor\n */\n\n/**\n * @param {Props} props\n */\nconst Affix = ({ offsetBottom, offsetTop, target, onChange, children }) => {\n  const props = { offsetBottom, offsetTop, target, onChange, children };\n\n  return <AntdAffix {...props}>{children}</AntdAffix>;\n};\nexport default Affix;\n","import React from \"react\";\nimport { Anchor as AntdAnchor } from \"antd\";\n/**\n * @typedef Props\n * @prop {boolean} affix\n * @prop {number} bounds\n * @prop {() => HTMLElement} getContainer\n * @prop {() => string\t} getCurrentAnchor\n * @prop {number} offsetTop\n * @prop {boolean} showInkInFixed\n * @prop {number} targetOffset\n * @prop {(currentActiveLink: string) => void\t} onChange\n * @prop {(e: React.MouseEvent<HTMLElement, MouseEvent>, link: { title: React.ReactNode; href: string; }) => void} onClick\n * @prop {JSX.Element} children\n * @return {JSX.Element}\n * @constructor\n */\n\n/**\n * @param {Props} props\n */\n\nconst Anchor = ({\n  affix,\n  bounds,\n  getContainer,\n  getCurrentAnchor,\n  offsetTop,\n  showInkInFixed,\n  targetOffset,\n  onChange,\n  onClick,\n  children,\n}) => {\n  const props = {\n    affix,\n    bounds,\n    getContainer,\n    getCurrentAnchor,\n    offsetTop,\n    showInkInFixed,\n    targetOffset,\n    onChange,\n    onClick,\n    children,\n  };\n\n  return <AntdAnchor {...props}>{children}</AntdAnchor>;\n};\nexport default Anchor;\n","import React from \"react\";\nimport { Alert as AntdAlert } from \"antd\";\n/**\n * @typedef Props\n * @prop {React.ReactNode } action\n * @prop {() => void} afterClose\n * @prop {boolean\t} banner\n * @prop {boolean\t} closable\n * @prop {React.ReactNode} closeText\n * @prop {React.ReactNode} description\n * @prop {React.ReactNode} icon\n * @prop {React.ReactNode} message\n * @prop {boolean} showIcon\n * @prop {\"success\" | \"info\" | \"warning\" | \"error\" | undefined} type\n * @prop {(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void\t} onClose\n * @returns {JSX.Element}\n * @constructor\n */\n\n/**\n * @param {Props} props\n */\n\nconst Alert = ({\n  action,\n  afterClose,\n  banner,\n  closable,\n  closeText,\n  description,\n  icon,\n  message,\n  showIcon,\n  type,\n  onClose,\n}) => {\n  const props = {\n    action,\n    afterClose,\n    banner,\n    closable,\n    closeText,\n    description,\n    icon,\n    message,\n    showIcon,\n    type,\n    onClose,\n  };\n\n  return <AntdAlert {...props} />;\n};\nexport default Alert;\n","import React from \"react\";\nimport { Alert as AntdAlert } from \"antd\";\n/**\n * @typedef Props\n * @prop {React.ReactNode} description\n * @prop {React.ReactNode} message\n * @returns {JSX.Element}\n * @constructor\n */\n\n/**\n * @param {Props} props\n */\n\n\nconst Alert = ({ description, message }) => {\n  const props = {\n    description,\n    message,\n  };\n\n  return <AntdAlert.ErrorBoundary {...props} />;\n};\nexport default Alert;\n","import React from \"react\";\nimport { Badge as AntdBadge } from \"antd\";\n\n/**\n * \n * @typedef Props\n * @prop {string} color\n * @prop {React.ReactNode} count\n * @prop {boolean} dot\n * @prop {[number, number]\t} offset\n * @prop {number} overflowCount\n * @prop {boolean} showZero\n * @prop {\"default\" | \"small\"\t} size\n * @prop {\"success\" | \"processing\" | \"default\" | \"error\" | \"warning\"\t} status\n * @prop {React.ReactNode} text\n * @prop {string} title\n * @prop {JSX.Element} children\n * @return {JSX.Element}\n * @constructor\n */\n\n/**\n * @param {Props} props\n */\nconst Badge = ({\n  color,\n  count,\n  dot,\n  offset,\n  overflowCount,\n  showZero,\n  size,\n  status,\n  text,\n  title,\n  children,\n}) => {\n  const props = {\n    color,\n    count,\n    dot,\n    offset,\n    overflowCount,\n    showZero,\n    size,\n    status,\n    text,\n    title,\n    children,\n  };\n\n  return <AntdBadge {...props}>{children}</AntdBadge>;\n};\nexport default Badge;\n","import React from \"react\";\nimport { Typography as AntdTypography } from \"antd\";\n\n/**\n * @typedef Props\n * @prop {string} href\n * @prop {string} target\n * @prop {string | undefined} title\n * @prop {string} className\n * @prop {JSX.Element} children\n * @return {JSX.Element}\n * @constructor\n */\n/**\n * @param {Props} props\n */\n\nconst Link = ({ href, target, title, className, children }) => {\n  const props = { href, target, title, className, children };\n  return <AntdTypography.Link {...props}>{children}</AntdTypography.Link>;\n};\nexport default Link;\n"],"names":["Divider","className","dashed","orientation","plain","style","type","children","props","AntdDivider","Button","block","danger","disabled","ghost","href","htmlType","icon","loading","shape","size","target","onClick","AntdButton","Avatar","alt","gap","src","srcSet","onError","AntdAvatar","AvatarGroup","maxCount","maxPopoverPlacement","maxStyle","Affix","offsetBottom","offsetTop","onChange","AntdAffix","Anchor","affix","bounds","getContainer","getCurrentAnchor","showInkInFixed","targetOffset","AntdAnchor","Alert","action","afterClose","banner","closable","closeText","description","message","showIcon","onClose","AntdAlert","Badge","color","count","dot","offset","overflowCount","showZero","status","text","title","AntdBadge","Link","AntdTypography"],"mappings":"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"}